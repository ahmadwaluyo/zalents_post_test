{"version":3,"sources":["store/actionTypes.js","store/actions/index.js","components/Form.js","components/CardDetail.js","components/Card.js","views/home/index.js","views/loginRegist/index.js","App.js","reportWebVitals.js","store/enhancers/monitorReducers.js","store/middlewares/logger.js","store/reducers/loginRegistReducer/loginReducer.js","store/reducers/loginRegistReducer/registerReducer.js","store/reducers/todosReducer/index.js","store/reducers/itemsReducer/index.js","store/reducers/index.js","index.js","store/configureStore.js"],"names":["SET_REGISTER","SET_LOGIN","SET_LOADING_LOGIN","SET_MODAL_ERROR_LOGIN","SET_ALL_TODOS","SET_LOADING_TODOS","SET_ALL_ITEMS","baseUrl","apiGet","url","token","params","axios","method","headers","apiPost","data","getAllTodos","dispatch","a","type","actionTypes","status","then","Promise","all","map","el","id","temp","detail","setTimeout","payload","catch","err","notification","error","message","finally","_","postItem","body","rightOrLeft","deleteItem","success","updateItem","paramsTodo","paramsItem","apiPatch","console","log","moved","apiDelete","useForm","Form","connect","postTodo","props","form","useDispatch","useState","visible","state","setState","onClose","block","onClick","PlusOutlined","title","bodyStyle","paddingBottom","layout","hideRequiredMark","onFinish","values","JSON","parse","localStorage","getItem","resetFields","Item","name","label","rules","required","placeholder","style","width","textAlign","marginRight","htmlType","colors","loadingTodos","todosReducer","postingItems","deletingItems","updatingItems","index","flagSend","cards","isVisible","setIsVisible","progress_percentage","editable","handleClose","handleMoveRightLeft","moveRightItem","moveLeftItem","useEffect","content","dataDetail","direction","className","ArrowRightOutlined","length","ArrowLeftOutlined","EditOutlined","todo_id","DeleteOutlined","lg","md","xl","xs","borderColor","borderWidth","marginBottom","actions","display","alignItems","justifyContent","fontWeight","PlusCircleOutlined","fontSize","loading","avatar","active","color","description","i","marginTop","padding","percent","size","placement","trigger","EllipsisOutlined","disabled","onCancel","centered","footer","initialValues","flexDirection","defaultValue","min","max","todos","setFlagSend","load","gutter","reLoad","Content","Layout","Footer","Sider","LayoutPage","history","useHistory","breakpoint","onBreakpoint","broken","theme","mode","push","position","bottom","removeItem","window","location","reload","LogoutOutlined","minHeight","Card","LoginForm","email","password","confirmPassword","e","preventDefault","auth_token","setItem","stringify","postRegister","signUpButton","document","getElementById","signInButton","signUpButtonResponsive","signInButtonResponsive","container","addEventListener","classList","add","remove","value","onChange","target","isLogin","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","now","newState","end","diff","Math","round","logger","store","next","messageError","loadingLogin","loginReducer","password_confirmation","registerReducer","items","itemsReducer","rootReducer","combineReducers","preloadedState","configureStore","middleware","loggerMiddleware","getDefaultMiddleware","enhancers","monitorReducersEnhancer","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b1f3673c.chunk.js","sourcesContent":["/* Login & Register */\nexport const SET_REGISTER = 'SET_REGISTER';\nexport const SET_LOGIN = 'SET_LOGIN';\nexport const SET_LOADING_LOGIN = 'SET_LOADING_LOGIN';\n\n/* Modal/Alert */\nexport const SET_MODAL_SUCCESS_REGISTER = 'SET_MODAL_SUCCESS_REGISTER';\nexport const SET_MODAL_SUCCESS_LOGIN = 'SET_MODAL_SUCCESS_LOGIN';\nexport const SET_MODAL_ERROR_REGISTER = 'SET_MODAL_ERROR_REGISTER';\nexport const SET_MODAL_ERROR_LOGIN = 'SET_MODAL_ERROR_LOGIN';\n\n/* TODOS */\nexport const SET_ALL_TODOS = 'SET_ALL_TODOS';\nexport const SET_LOADING_TODOS = 'SET_LOADING_TODOS';\n\n/* ITEMS */\nexport const SET_ALL_ITEMS = 'SET_ALL_ITEMS';\n","import axios from 'axios';\nimport { notification } from 'antd';\nimport * as actionTypes from '../actionTypes';\n\n/* Main API */\n\nconst baseUrl = 'https://todos-project-api.herokuapp.com';\n\nconst apiGet = (url, token, params) => {\n    return axios({\n        url,\n        method: 'GET',\n        params,\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    })\n}\n\nconst apiPost = (url, data, token, params) => {\n    if (token) {\n        return axios({\n            url,\n            method: 'POST',\n            params,\n            data,\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        })\n    } else {\n        return axios({\n            url,\n            method: 'POST',\n            params,\n            data\n        })\n    }\n}\n\nconst apiPatch = (url, data, token, params) => {\n    return axios({\n        url,\n        method: 'PATCH',\n        params,\n        data,\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST,HEAD, OPTIONS,PUT, DELETE, PATCH'\n        }\n    })\n}\n\nconst apiDelete = (url, token, params) => {\n    return axios({\n        url,\n        method: 'DELETE',\n        params,\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            'Access-Control-Allow-Origin': '*'\n        }\n    })\n}\n\n\n/* Login & Register */\n\nexport const postRegister = (body) => {\n    return async (dispatch) => {\n        await apiPost(`${baseUrl}/signup`, body)\n        .then(({data}) => {\n            dispatch({\n                type: actionTypes.SET_REGISTER,\n                token: data.auth_token,\n                message: data.message\n            });\n            notification.success({\n                message: 'account successfully registered !'\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: actionTypes.SET_MODAL_ERROR_REGISTER,\n                payload: {\n                    title: 'ERROR REGISTER ACCOUNT!',\n                    body: 'Your input is invalid !'\n                }\n            });\n            notification.error({\n                message: 'Your input is invalid !'\n            });\n        })\n    }\n}\n\nexport const postLogin = (body) => {\n    return async (dispatch) => {\n        dispatch({\n            type: actionTypes.SET_LOADING_LOGIN,\n            status: true\n        });\n        await apiPost(`${baseUrl}/auth/login`, body)\n        .then(({data}) => {\n            const token = {\n                status: true,\n                token: data.auth_token\n            };\n            localStorage.setItem(\"isLogin\", JSON.stringify(token, null, 2));\n            dispatch({\n                type: actionTypes.SET_LOGIN,\n                token: data.auth_token,\n                message: data.message\n            });\n            window.location.reload();\n        })\n        .catch(err => {\n            notification.error({\n                message: 'Your input is invalid !'\n            });\n        })\n        .finally(_ => {\n            dispatch({\n                type: actionTypes.SET_LOADING_LOGIN,\n                status: false\n            });\n        })\n    }\n}\n\n\n/* Todos */\n\nexport const getAllTodos = (token) => {\n    return async (dispatch) => {\n        dispatch(({\n            type: actionTypes.SET_LOADING_TODOS,\n            status: true\n        }));\n        await apiGet(`${baseUrl}/todos`, token)\n        .then(({data}) => {\n            Promise.all(data.map(async (el) => {\n                let temp = await apiGet(`${baseUrl}/todos/${el.id}/items`, token);\n                el.detail = temp.data;\n            }));\n            setTimeout(() => {\n                dispatch({\n                    type: actionTypes.SET_ALL_TODOS,\n                    payload: data\n                });\n            }, 1500)\n        })\n        .catch(err => {\n            notification.error({\n                message: err.message\n            });\n        })\n        .finally(_ => {\n            dispatch(({\n                type: actionTypes.SET_LOADING_TODOS,\n                status: false\n            }));\n        })\n    }\n}\n\nexport const postTodo = (token, body) => {\n    return async (dispatch) => {\n        await apiPost(`${baseUrl}/todos`, body, token)\n        .then(({data}) => {\n            console.log(data, 'data post')\n            notification.success({\n                message: 'Todo created successfully !'\n            });\n        })\n        .catch(err => {\n            notification.error({\n                message: err.message\n            });\n        });\n    }\n}\n\n/* Items */\nexport const getAllItems = (token, params) => {\n    return async (dispatch) => {\n        await apiGet(`${baseUrl}/todos/${params}/items`, token)\n        .then(({data}) => {\n            dispatch({\n                type: actionTypes.SET_ALL_ITEMS,\n                payload: data\n            });\n        })\n        .catch(err => {\n            notification.error({\n                message: err.message\n            });\n        });\n    }\n}\n\nexport const postItem = (token, params, body, rightOrLeft) => {\n    return (dispatch) => {\n        apiPost(`${baseUrl}/todos/${params}/items`,body, token)\n        .then(({data}) => {\n            if (rightOrLeft === 'right') {\n                dispatch(deleteItem(token, params-1, body.id, 'moved'));\n                notification.success({\n                    message: 'Item moved to right successfully !'\n                });\n            } else if (rightOrLeft === 'left'){\n                dispatch(deleteItem(token, params+1, body.id, 'moved'));\n                notification.success({\n                    message: 'Item moved to left successfully !'\n                });\n            } else {\n                notification.success({\n                    message: 'Item created successfully !'\n                });\n            }\n        })\n        .catch(err => {\n            notification.error({\n                message: err.message\n            });\n        })\n    }\n}\n\nexport const updateItem = (token, paramsTodo, paramsItem, body) => {\n    return (dispatch) => {\n        apiPatch(`${baseUrl}/todos/${paramsTodo}/items/${paramsItem}`, body, token)\n        .then(({data}) => {\n            console.log(data);\n            notification.success({\n                message: 'Item has successfully updated !'\n            });\n        })\n        .catch(err => {\n            notification.error({\n                message: err.message === 'Network Error' ? 'Your request has been block by CORS policy !' : 'Invalid Input !'\n            });\n        })\n    }\n}\n\nexport const deleteItem = (token, paramsTodo, paramsItem, moved) => {\n    return (dispatch) => {\n        apiDelete(`${baseUrl}/todos/${paramsTodo}/items/${paramsItem}`, token)\n        .then(({data}) => {\n            console.log(data)\n            if (!moved) {\n                notification.success({\n                    message: 'Item deleted successfully !'\n                });\n            }\n        })\n        .catch(err => {\n            notification.error({\n                message: 'Failed to delete item !'\n            });\n        })\n    }\n}\n\nexport const moveRightItem = (token, params, body) => {\n    return (dispatch) => {\n        dispatch(postItem(token, params+1, body, 'right')); \n    }\n}\n\nexport const moveLeftItem = (token, params, body) => {\n    return (dispatch) => { \n        dispatch(postItem(token, params-1, body, 'left'));\n    }\n}","import React, { useState } from 'react';\nimport { Drawer, Form, Button, Input } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { connect, useDispatch } from 'react-redux';\nimport { postTodo, getAllTodos } from '../store/actions';\n\nconst { useForm } = Form;\n\nfunction DrawerForm (props) {\n    const form = useForm();\n    const dispatch = useDispatch();\n    const [state, setState] = useState({\n        visible: false\n    })\n\n    const showDrawer = () => {\n        setState({\n            ...state,\n            visible: true,\n        });\n    };\n\n    const onClose = () => {\n        setState({\n            ...state,\n            visible: false,\n        });\n    };\n\n    const handleSubmit = (values) => {\n        const token = JSON.parse(localStorage.getItem(\"isLogin\"));\n        props.postTodo(token.token, values);\n        onClose();\n        dispatch(getAllTodos(token.token));\n        form.resetFields();\n    }\n\n    return (\n        <>\n            <Button type=\"dashed\" block onClick={showDrawer}>\n                <PlusOutlined />Add Todos\n            </Button>\n            <Drawer\n            title=\"Create a new todos\"\n            onClose={onClose}\n            visible={state.visible}\n            bodyStyle={{ paddingBottom: 80 }}\n            >\n                <Form layout=\"vertical\" hideRequiredMark onFinish={handleSubmit}>\n                    <Form.Item\n                    name=\"title\"\n                    label=\"Title\"\n                    rules={[{ required: true, message: 'Title must be filled !' }]}\n                    >\n                    <Input placeholder=\"Please enter the title\" />\n                    </Form.Item>\n                    <Form.Item\n                    name=\"description\"\n                    label=\"Descriptions\"\n                    rules={[{ required: true, message: 'Descriptions must be filled !' }]}\n                    >\n                    <Input\n                        style={{ width: '100%' }}\n                        placeholder=\"Please enter descriptions\"\n                    />\n                    </Form.Item>\n                    <div\n                    style={{\n                        textAlign: 'left',\n                    }}\n                    >\n                        <Button onClick={onClose} style={{ marginRight: 8 }}>\n                            Cancel\n                        </Button>\n                        <Button htmlType=\"submit\" type=\"primary\">\n                            Submit\n                        </Button>\n                    </div>\n                </Form>\n            </Drawer>\n        </>\n        );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        postTodo: (token, body) => dispatch(postTodo(token, body))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(DrawerForm);\n\n","import React, { useState, useEffect } from 'react';\nimport { \n    Skeleton, \n    Card, \n    Progress, \n    Popover, \n    Col, \n    Space, \n    Tag, \n    Row,\n    Modal,\n    Form,\n    Input,\n    InputNumber,\n    Button\n} from 'antd';\nimport { \n    EditOutlined, EllipsisOutlined, ArrowRightOutlined, DeleteOutlined,\n    PlusCircleOutlined,\n    ArrowLeftOutlined\n } from '@ant-design/icons';\n import { connect, useDispatch } from 'react-redux';\n import { postItem, deleteItem, updateItem, moveLeftItem, moveRightItem } from '../store/actions';\n\nconst token = JSON.parse(localStorage.getItem(\"isLogin\"));\n\n const colors = [\n     'magenta',\n     'mediumpurple',\n     'blue',\n     'lightgreen'\n ]\n\nconst CardDetail = ({data, index, postingItems, deletingItems, flagSend, cards, loadingTodos, updatingItems}) => {\n    const dispatch = useDispatch();\n    const [isVisible, setIsVisible] = useState(false);\n    const [state, setState] = useState({\n        name: '',\n        progress_percentage: 0,\n        id: 0,\n        editable: false\n    })\n    const handleAddItems = () => {\n        setIsVisible(true);\n    }\n    const handleClose = () => {\n        setIsVisible(false);\n    }\n    const handlePostItem = (values) => {\n        postingItems(token.token, data.id, values);\n        setIsVisible(false);\n        flagSend();\n    }\n    const handleEditItem = (values) => {\n        console.log(values, \"ini value\");\n        updatingItems(token.token, data.id, state.id, {\n            'name': values.name,\n            'target_todo_id': state.id\n        });\n        setState({\n            ...state,\n            name: '',\n            progress_percentage: 0,\n            id: 0,\n            editable: false\n        })\n        setIsVisible(false);\n        flagSend();\n    }\n    const handleDeleteItem = (detail) => {\n        deletingItems(token.token, detail.todo_id, detail.id);\n        flagSend();\n    }\n    const validateEdit = (detail) => {\n        console.log(detail, \"detail\");\n        setState({\n            ...state,\n            name: detail.name,\n            progress_percentage: +detail.progress_percentage,\n            id: detail.id,\n            editable: true\n        });\n        setIsVisible(true);\n    }\n    const handleMoveRightLeft = (detail, params) => {\n        switch(params) {\n            case 'right':\n                dispatch(moveRightItem(token.token, data.id, {\n                    \"id\": detail.id,\n                    \"name\": detail.name,\n                    \"progress_percentage\": detail.progress_percentage\n                }));\n                flagSend();\n                setTimeout(() => {\n                    flagSend();\n                }, 1000)\n                break;\n            default:\n                dispatch(moveLeftItem(token.token, data.id, {\n                    \"id\": detail.id,\n                    \"name\": detail.name,\n                    \"progress_percentage\": detail.progress_percentage\n                }));\n                flagSend();\n                setTimeout(() => {\n                    flagSend();\n                }, 1000)\n                break\n        }\n    }\n\n    useEffect(() => {\n        if (loadingTodos) {\n            console.log(\"dataLoadeds\");\n        } else {\n            flagSend();\n        }\n    }, [])\n\n    const content = (dataDetail) => {\n        return (\n            <Space direction=\"vertical\" className=\"con-card\">\n                {\n                    index === 0 ?\n                    <Col className=\"centered\" onClick={() => handleMoveRightLeft(dataDetail, 'right')}><ArrowRightOutlined className=\"icon\" />Move Right</Col> :\n                    index === cards.length-1 ?\n                    <Col className=\"centered\" onClick={() => handleMoveRightLeft(dataDetail, 'left')}><ArrowLeftOutlined className=\"icon\" />Move Left</Col> :\n                    <>\n                    <Col className=\"centered\" onClick={() => handleMoveRightLeft(dataDetail, 'right')}><ArrowRightOutlined className=\"icon\" />Move Right</Col>\n                    <Col className=\"centered\" onClick={() => handleMoveRightLeft(dataDetail, 'left')}><ArrowLeftOutlined className=\"icon\" />Move Left</Col>\n                    </>\n                }\n                <Col className=\"centered\" onClick={() => validateEdit(dataDetail)}><EditOutlined className=\"icon\" />Edit</Col>\n                <Col className=\"centered\" onClick={() => handleDeleteItem(dataDetail)}><DeleteOutlined className=\"icon\" />Delete</Col>\n            </Space>\n        )\n    }\n\n    return (\n        <Col lg={6} md={6} xl={6} xs={24}>\n            <Card\n            style={{borderColor: colors[index] || 'green', borderWidth: 1.9, marginBottom: 10}}\n            actions={[\n                <Row style={{display: 'flex', alignItems: 'center', justifyContent: 'center', fontWeight: 600}} onClick={index === 0 ? handleAddItems : null}>\n                    <PlusCircleOutlined key=\"add\" />&nbsp;<span style={{fontSize: 12}}>New Task</span>\n                </Row>,\n                null,\n                null\n            ]}\n            >\n            <Skeleton loading={loadingTodos} avatar active>\n            <Space direction=\"vertical\">\n                <Col>\n                    <Tag color={colors[index] || 'green'}>{data.title}</Tag>\n                </Col>\n                <Col>\n                    <span className=\"month\">{data.description}</span>\n                </Col>\n            </Space>\n            {data.detail && data.detail.length > 0 ?\n            data.detail.map((el, i) => \n            (<Card \n            key={i}\n            style={{marginTop: 5, padding: 0}}\n            className=\"card-detail\"\n            actions={[\n                <Progress percent={el.progress_percentage || 0} size=\"small\" status=\"active\" style={{width: \"60%\"}} />,\n                <Popover placement=\"rightTop\" content={() => content(el)} trigger=\"hover\">\n                    <EllipsisOutlined key=\"ellipsis\" />\n                </Popover>,\n            ]}\n            >\n                <span className=\"card-title\">{el.name}</span>\n            </Card>)\n            ) : (<Card \n                style={{marginTop: 5, padding: 0}}\n                >\n                    <Input placeholder=\"No Task Available\" disabled />\n                </Card>)\n            }\n            </Skeleton>\n            </Card>\n            {isVisible ?\n            <Modal \n            visible={isVisible} \n            onCancel={handleClose} \n            centered \n            title={'Create Task'}\n            footer={null}\n            >\n                <Form onFinish={state.editable ? handleEditItem : handlePostItem}>\n                    <Form.Item\n                    name=\"name\"\n                    style={{width: \"50%\"}}\n                    initialValues={state.name}\n                    rules={[{ required: true, message: 'Task name must be filled !' }]}\n                    >\n                        <div style={{display: 'flex', flexDirection: 'column'}}>\n                            <label>Task Name</label>\n                            <Input placeholder=\"example: Build rocket to Mars\" defaultValue={state.name} />\n                        </div>\n                    </Form.Item>\n                    <Form.Item\n                    name=\"progress_percentage\"\n                    style={{width: \"50%\"}}\n                    rules={[{ required: true, message: 'Progress must be filled !' }]}\n                    >\n                        <div style={{display: 'flex', flexDirection: 'column'}}>\n                            <label>Progress</label>\n                            <InputNumber placeholder=\"0%\" min={0} max={100} defaultValue={state.progress_percentage} />\n                        </div>\n                    </Form.Item>\n                    <div\n                    style={{\n                        textAlign: 'right',\n                    }}\n                    >\n                        <Button onClick={handleClose} style={{ marginRight: 8 }}>\n                            Cancel\n                        </Button>\n                        <Button htmlType=\"submit\" type=\"primary\">\n                            {state.editable ? 'Edit' : 'Save'} Task\n                        </Button>\n                    </div>\n                </Form>\n            </Modal> : null}\n        </Col>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loadingTodos: state.todosReducer.loadingTodos\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        postingItems: (token, params, body) => dispatch(postItem(token, params, body)),\n        deletingItems: (token, paramsTodo, paramsItem) => dispatch(deleteItem(token, paramsTodo, paramsItem)),\n        updatingItems: (token, paramsTodo, paramsItem, body) => dispatch(updateItem(token, paramsTodo, paramsItem, body))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardDetail);","import React, { useState, useEffect } from 'react';\nimport { \n    Col, \n    Row,\n} from 'antd';\n import { connect } from 'react-redux';\n import { getAllTodos } from '../store/actions';\n import FormPage from '../components/Form';\n import CardDetail from './CardDetail';\n\n const token = JSON.parse(localStorage.getItem(\"isLogin\"));\n \n\nfunction CardPage(props) {\n    const [flagSend, setFlagSend] = useState(false);\n\n    const load = () => {\n        props.getAllTodos(token.token);\n        setFlagSend(false);\n    };\n\n    useEffect(() => {\n        if (props?.cards.length) {\n            console.log(\"dataLoadeds\");\n        } else {\n            load();\n        }\n    }, [])\n\n    useEffect(() => {\n        if (flagSend) {\n            load();\n        }\n    }, [flagSend])\n\n    return (\n        <Row gutter={24}>\n            {\n                props.cards &&\n                props.cards.length > 0 ?\n                <>\n                {props.cards.map((el, i) => \n                    <CardDetail cards={props.cards} postingItems={props.postingItems} reLoad={props.getAllTodos} deletingItems={props.deletingItems} data={el} key={i} index={i} flagSend={() => setFlagSend(true)} />\n                )}\n                <Col lg={6} md={6} xs={12}>\n                    <FormPage />\n                </Col>\n                </> :\n                <Col lg={6} md={6} xs={12}>\n                    <FormPage />\n                </Col>\n            }\n        </Row>\n      );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cards: state.todosReducer.todos\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getAllTodos: () => dispatch(getAllTodos(token.token))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardPage);","import { Button, Layout, Menu } from 'antd';\nimport { LogoutOutlined } from '@ant-design/icons';\nimport CardPage from '../../components/Card';\nimport { useHistory } from 'react-router-dom';\n\nconst { Content, Footer, Sider } = Layout;\n\nexport default function LayoutPage() {\n    const history = useHistory();\n    const handleLogout = () => {\n        localStorage.removeItem(\"isLogin\");\n        window.location.reload();\n    }\n    return (\n        <Layout className=\"layout\">\n          <Sider\n            breakpoint=\"md\"\n            width=\"100px\"\n            onBreakpoint={broken => {\n              console.log(broken);\n            }}\n          >\n              <Menu theme=\"dark\" mode=\"inline\">\n                  <div onClick={() => history.push(\"/\")} className=\"logo\">Zalents</div>\n              </Menu>\n              <Menu theme=\"dark\" mode=\"inline\" style={{position: 'absolute', bottom: 0}} onClick={handleLogout}>\n                  <Button type=\"danger\" style={{width: \"100%\"}}><LogoutOutlined /></Button>\n              </Menu>\n          </Sider>\n          <Layout>\n              <Content>\n                  <div className=\"site-layout-background\" style={{ padding: 24, minHeight: \"100%\" }}>\n                      <h3 className=\"title\">Product Roadmap</h3>\n                      <CardPage />\n                  </div>\n              </Content>\n              <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n          </Layout>\n        </Layout>\n      );\n}","import React, { useEffect, useState } from 'react';\nimport { postLogin, postRegister } from '../../store/actions';\nimport { useDispatch } from 'react-redux';\n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n    const [state, setState] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const onFinish = (params, e) => {\n        e.preventDefault();\n        switch (params) {\n            case 'login':\n                dispatch(postLogin({\n                    email: state.email,\n                    password: state.password\n                }));\n                break;\n            default:\n                dispatch(postRegister(state));\n        }\n        setState({\n            name: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        })\n    };\n\n    useEffect(() => {\n        const signUpButton = document.getElementById('signUp');\n        const signInButton = document.getElementById('signIn');\n        const signUpButtonResponsive = document.getElementById('signUpResponsive');\n        const signInButtonResponsive = document.getElementById('signInResponsive');\n        const container = document.getElementById('container');\n\n        signUpButton.addEventListener('click', () => {\n            container.classList.add(\"right-panel-active\");\n        });\n\n        signInButton.addEventListener('click', () => {\n            container.classList.remove(\"right-panel-active\");\n        });\n\n        signUpButtonResponsive.addEventListener('click', () => {\n            container.classList.add(\"right-panel-active\");\n        });\n\n        signInButtonResponsive.addEventListener('click', () => {\n            container.classList.remove(\"right-panel-active\");\n        });\n    });\n\n    return (\n        <div className=\"container-login\">\n            <div className=\"container\" id=\"container\">\n                <div className=\"form-container sign-up-container\">\n                    <form>\n                        <h1>Create Account</h1>\n                        <span>or use your email for registration</span>\n                        <input type=\"text\" placeholder=\"Name\" value={state.name} onChange={(e) => setState({...state, name: e.target.value})} />\n                        <input type=\"email\" placeholder=\"Email\" value={state.email} onChange={(e) => setState({...state, email: e.target.value})} />\n                        <input type=\"password\" placeholder=\"Password\" value={state.password} onChange={(e) => setState({...state, password: e.target.value})} />\n                        <input type=\"password\" placeholder=\"Confirm Password\" value={state.confirmPassword} onChange={(e) => setState({...state, confirmPassword: e.target.value})} />\n                        <button className=\"sign-btn\" onClick={(e) => onFinish('register', e)}>Sign Up</button>\n                    </form>\n                    <div className=\"overlay-panel overlay-left\">\n                        <span className=\"responsive-span\">you don't have account ?</span>\n                        <button className=\"responsive-btn\" id=\"signInResponsive\">Sign In</button>\n                    </div>\n                </div>\n                <div className=\"form-container sign-in-container\">\n                    <form>\n                        <h1>Sign in</h1>\n                        <div className=\"social-container\">\n                            <span className=\"social\"><i className=\"fab fa-facebook-f\"></i></span>\n                            <span className=\"social\"><i className=\"fab fa-google-plus-g\"></i></span>\n                            <span className=\"social\"><i className=\"fab fa-linkedin-in\"></i></span>\n                        </div>\n                        <span>or use your account</span>\n                        <input type=\"email\" placeholder=\"Email\" value={state.email} onChange={(e) => setState({...state, email: e.target.value})} />\n                        <input type=\"password\" placeholder=\"Password\" value={state.password} onChange={(e) => setState({...state, password: e.target.value})} />\n                        <button className=\"sign-btn\" onClick={(e) => onFinish('login', e)}>Sign In</button>\n                    </form>\n                    <div className=\"overlay-panel overlay-right\">\n                        <span className=\"responsive-span\">already have account ?</span>\n                        <button className=\"responsive-btn\" id=\"signUpResponsive\">Sign Up</button>\n                    </div>\n                </div>\n                <div className=\"overlay-container\">\n                    <div className=\"overlay\">\n                        <div className=\"overlay-panel overlay-left\">\n                            <h1>Welcome Back!</h1>\n                            <p>To keep connected with us please login with your personal info</p>\n                            <button className=\"ghost\" id=\"signIn\">Sign In</button>\n                        </div>\n                        <div className=\"overlay-panel overlay-right\">\n                            <h1>Hello, Friend!</h1>\n                            <p>Enter your personal details and start journey with us</p>\n                            <button className=\"ghost\" id=\"signUp\">Sign Up</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginForm;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Layout from './views/home';\nimport Login from './views/loginRegist';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nconst isLogin = JSON.parse(localStorage.getItem(\"isLogin\"));\n\nfunction App() {\n  return (\n      <Router>\n          <Switch>\n              <Route \n                path=\"/\"\n                exact\n              >\n                  {!isLogin ? <Login /> : <Layout />}\n              </Route>\n          </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer = createStore => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now()\n    const newState = reducer(state, action)\n    const end = performance.now()\n    const diff = round(end - start)\n\n    console.log('reducer process time:', diff)\n\n    return newState\n  }\n\n  return createStore(monitoredReducer, initialState, enhancer)\n}\n\nexport default monitorReducerEnhancer","const logger = store => next => action => {\n    let result = next(action)\n    return result\n  }\n  \n  export default logger","import * as actionTypes from '../../actionTypes';\n\nconst initialState = {\n    token: '',\n    messageError: '',\n    loadingLogin: false\n}\n\nconst loginReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_LOGIN:\n            return {...state, token: action.token}\n        case actionTypes.SET_MODAL_ERROR_LOGIN:\n            return {...state, messageError: action.payload.body}\n        case actionTypes.SET_LOADING_LOGIN:\n            return {...state, loadingLogin: action.status}\n        default:\n            return state\n    }\n}\n\nexport default loginReducer;","import * as actionTypes from '../../actionTypes';\n\nconst initialState = {\n    name: '',\n    email: '',\n    password: '',\n    password_confirmation: ''\n}\n\nconst registerReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_REGISTER:\n            return {...state}\n        default:\n            return state\n    }\n}\n\nexport default registerReducer;","import * as actionTypes from '../../actionTypes';\n\nconst initialState = {\n    todos: [],\n    loadingTodos: false\n}\n\nconst todosReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_ALL_TODOS:\n            return {...state, todos: action.payload}\n        case actionTypes.SET_LOADING_TODOS:\n            return {...state, loadingTodos: action.status}\n        default:\n            return state\n    }\n}\n\nexport default todosReducer;","import * as actionTypes from '../../actionTypes';\n\nconst initialState = {\n    items: []\n}\n\nconst itemsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_ALL_ITEMS:\n            return {...state, items: action.payload}\n        default:\n            return state\n    }\n}\n\nexport default itemsReducer;","import { combineReducers } from 'redux';\nimport loginReducer from './loginRegistReducer/loginReducer';\nimport registerReducer from './loginRegistReducer/registerReducer';\nimport todosReducer from './todosReducer';\nimport itemsReducer from './itemsReducer';\n\nconst rootReducer = combineReducers({\n    loginReducer,\n    registerReducer,\n    todosReducer,\n    itemsReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\n\nimport monitorReducersEnhancer from './enhancers/monitorReducers'\nimport loggerMiddleware from './middlewares/logger'\nimport rootReducer from './reducers'\n\nexport default function configureAppStore(preloadedState) {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: [loggerMiddleware, ...getDefaultMiddleware()],\n    preloadedState,\n    enhancers: [monitorReducersEnhancer]\n  })\n  return store\n}"],"sourceRoot":""}